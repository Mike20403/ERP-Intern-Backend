// <auto-generated />
using System;
using DotNetStarter.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetStarter.Migrations
{
    [DbContext(typeof(DotNetStarterDbContext))]
    [Migration("20230927075632_AdjustUsers")]
    partial class AdjustUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetStarter.Entities.AuthToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TokenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("DotNetStarter.Entities.Otp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("DotNetStarter.Entities.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Privileges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31abfcd0-ed97-4118-a168-f61682cc8034"),
                            Name = "MANAGE_USERS"
                        },
                        new
                        {
                            Id = new Guid("4f3095bc-4a7c-4444-a36d-1395183b9e32"),
                            Name = "MANAGE_PAID_LINGUISTIC_ASSETS"
                        },
                        new
                        {
                            Id = new Guid("c57f94c2-342b-423a-8fe8-e08dd5ce96b9"),
                            Name = "MANAGE_VENDORS"
                        },
                        new
                        {
                            Id = new Guid("fa1dd2fd-8037-4eba-8c51-2a1ee338a739"),
                            Name = "MANAGE_CLIENTS_AND_PROJECT_TAGS"
                        },
                        new
                        {
                            Id = new Guid("844ef058-9bf3-4989-8717-101bf1887f85"),
                            Name = "CREATE_ANY_PROJECTS"
                        },
                        new
                        {
                            Id = new Guid("36ef0463-7435-4d8c-abc8-65a15824ed4e"),
                            Name = "VIEW_ALL_PROJECTS"
                        },
                        new
                        {
                            Id = new Guid("7925dde1-b983-46c3-a9fa-59d08d497c3f"),
                            Name = "MANAGE_LINGUISTIC_ASSETS_IN_ALL_PROJECTS"
                        },
                        new
                        {
                            Id = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Name = "MANAGE_ALL_GLOSSARIES"
                        },
                        new
                        {
                            Id = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Name = "MANAGE_ALL_TMS"
                        },
                        new
                        {
                            Id = new Guid("06e6bc20-7534-4e47-b914-8a0dd0867a24"),
                            Name = "SUGGEST_TERMS_WITHOUT_SPECIFYING_A_GLOSSARY"
                        },
                        new
                        {
                            Id = new Guid("3f4a03fe-05ac-49e3-ac32-692ed12d1510"),
                            Name = "MANAGE_PROJECT_TEMPLATES"
                        },
                        new
                        {
                            Id = new Guid("1e9c547e-f245-46e4-b4c6-779ce7a3774e"),
                            Name = "MANAGE_ORDERS"
                        },
                        new
                        {
                            Id = new Guid("391a2af6-a576-43fd-9d3d-90baf5c52594"),
                            Name = "MANAGE_SERVICE_TEMPLATES"
                        });
                });

            modelBuilder.Entity("DotNetStarter.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            Name = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            Name = "PROJECT_MANAGER"
                        },
                        new
                        {
                            Id = new Guid("752b3a92-dc11-487f-b2c9-0e5119e71604"),
                            Name = "RESOURCE_MANAGER"
                        },
                        new
                        {
                            Id = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            Name = "LOCALIZATION_TEAM"
                        },
                        new
                        {
                            Id = new Guid("36a36642-44db-4e8d-8cc8-adc387d73150"),
                            Name = "TALENT"
                        });
                });

            modelBuilder.Entity("DotNetStarter.Entities.RolePrivilege", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivileges");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("31abfcd0-ed97-4118-a168-f61682cc8034"),
                            Id = new Guid("9dbbfae8-7017-4a95-923d-c439b08d7110")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("4f3095bc-4a7c-4444-a36d-1395183b9e32"),
                            Id = new Guid("8d378b56-9c39-4c7e-8620-38c314821fef")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("c57f94c2-342b-423a-8fe8-e08dd5ce96b9"),
                            Id = new Guid("849c8950-e066-4543-9ed8-410a26916c0a")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("fa1dd2fd-8037-4eba-8c51-2a1ee338a739"),
                            Id = new Guid("44c3bfa4-0843-4c98-8c73-4106e452f305")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("844ef058-9bf3-4989-8717-101bf1887f85"),
                            Id = new Guid("b8af3f12-42b5-4464-85bc-07d2315a61e1")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("36ef0463-7435-4d8c-abc8-65a15824ed4e"),
                            Id = new Guid("b5855e40-ece8-4cb4-9acc-c87fa39c7543")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("7925dde1-b983-46c3-a9fa-59d08d497c3f"),
                            Id = new Guid("d7a9c6f5-c519-4235-97f7-941c826f97d5")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Id = new Guid("0f467342-1e68-4cf5-85f3-46fce0948dad")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Id = new Guid("dd11ec0b-3c25-44a7-bda0-c281e75683a6")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("06e6bc20-7534-4e47-b914-8a0dd0867a24"),
                            Id = new Guid("9de33dad-f693-4be9-9e0d-69b687c6b682")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("3f4a03fe-05ac-49e3-ac32-692ed12d1510"),
                            Id = new Guid("d0b42a06-af2f-4348-b299-fcfddc72a142")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("1e9c547e-f245-46e4-b4c6-779ce7a3774e"),
                            Id = new Guid("b240f7dd-75dc-4595-a491-144cb1678406")
                        },
                        new
                        {
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            PrivilegeId = new Guid("391a2af6-a576-43fd-9d3d-90baf5c52594"),
                            Id = new Guid("9543579e-5ef5-472b-acc2-de08a867c38c")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("fa1dd2fd-8037-4eba-8c51-2a1ee338a739"),
                            Id = new Guid("75041757-4085-42ce-8800-10610b1f6091")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("844ef058-9bf3-4989-8717-101bf1887f85"),
                            Id = new Guid("87491c80-15df-482c-87a2-e4770a7c1e5a")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("36ef0463-7435-4d8c-abc8-65a15824ed4e"),
                            Id = new Guid("3a9f0b14-19df-4e2a-b522-c63e813510a9")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("7925dde1-b983-46c3-a9fa-59d08d497c3f"),
                            Id = new Guid("e3ad16fb-0983-4b76-b900-e1512a1de3f9")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Id = new Guid("15306c3c-4888-4fef-b12c-8e307929cd1f")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Id = new Guid("d57a2c99-27e5-464c-8715-3f7fb6f1a57f")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("06e6bc20-7534-4e47-b914-8a0dd0867a24"),
                            Id = new Guid("1f0e1d76-2f51-40f3-9571-92bd0ba288b9")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("3f4a03fe-05ac-49e3-ac32-692ed12d1510"),
                            Id = new Guid("391b873b-247f-4e41-8fc7-8d8697e5240c")
                        },
                        new
                        {
                            RoleId = new Guid("2fa87016-bafe-44f7-b4b3-d41fb0f0e202"),
                            PrivilegeId = new Guid("1e9c547e-f245-46e4-b4c6-779ce7a3774e"),
                            Id = new Guid("8bfee646-f1eb-41d5-a045-8fb7773d09a9")
                        },
                        new
                        {
                            RoleId = new Guid("752b3a92-dc11-487f-b2c9-0e5119e71604"),
                            PrivilegeId = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Id = new Guid("526e8242-f5a4-481d-8c16-5a8d953cd713")
                        },
                        new
                        {
                            RoleId = new Guid("752b3a92-dc11-487f-b2c9-0e5119e71604"),
                            PrivilegeId = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Id = new Guid("92e615d3-2fe3-4a34-94dd-88d1f17792de")
                        },
                        new
                        {
                            RoleId = new Guid("752b3a92-dc11-487f-b2c9-0e5119e71604"),
                            PrivilegeId = new Guid("06e6bc20-7534-4e47-b914-8a0dd0867a24"),
                            Id = new Guid("d843a16e-59b8-4fe3-b860-9a6200f68a4b")
                        },
                        new
                        {
                            RoleId = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            PrivilegeId = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Id = new Guid("63fb0ea1-c5a2-44b4-85ae-e9ba1a0d2c93")
                        },
                        new
                        {
                            RoleId = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            PrivilegeId = new Guid("844ef058-9bf3-4989-8717-101bf1887f85"),
                            Id = new Guid("5b789d79-3444-4437-8d33-270f5024c57a")
                        },
                        new
                        {
                            RoleId = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            PrivilegeId = new Guid("36ef0463-7435-4d8c-abc8-65a15824ed4e"),
                            Id = new Guid("c4426758-be79-4e70-a980-2f555103fb98")
                        },
                        new
                        {
                            RoleId = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            PrivilegeId = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Id = new Guid("1f96dc48-84f7-4dfd-a45e-e5c17a6f45a6")
                        },
                        new
                        {
                            RoleId = new Guid("75b9c8bd-68ff-49a2-ba3b-f3adf6b01d07"),
                            PrivilegeId = new Guid("7925dde1-b983-46c3-a9fa-59d08d497c3f"),
                            Id = new Guid("14d9869e-7283-4a86-afbf-b93a1cbcbbcb")
                        });
                });

            modelBuilder.Entity("DotNetStarter.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("RoleId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Admin",
                            Gender = 1,
                            Lastname = "Yopmail",
                            Password = "$2a$11$61sJj9Y7idWPUoWTysZ81u7B0veE3dPhfdPGIJbi.TB0r/NtgR0k2",
                            PhoneNumber = "0333333333",
                            RoleId = new Guid("364dfceb-7779-4190-a5bc-2bd4aba39af4"),
                            Status = 1,
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin.dotnetstarter@yopmail.com"
                        });
                });

            modelBuilder.Entity("DotNetStarter.Entities.UserPrivilege", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PrivilegeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("UserPrivileges");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("31abfcd0-ed97-4118-a168-f61682cc8034"),
                            Id = new Guid("aa58599d-743d-4f39-b3c1-9f4f0f561d5e")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("4f3095bc-4a7c-4444-a36d-1395183b9e32"),
                            Id = new Guid("8c620425-8f7d-43e5-82fa-17794c22a208")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("c57f94c2-342b-423a-8fe8-e08dd5ce96b9"),
                            Id = new Guid("999c7d5e-f5f1-48dc-90bc-32bcc524e463")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("fa1dd2fd-8037-4eba-8c51-2a1ee338a739"),
                            Id = new Guid("438dff74-2a59-43a8-a5fc-c63000fafa6d")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("844ef058-9bf3-4989-8717-101bf1887f85"),
                            Id = new Guid("81cba8a1-9a35-456e-971e-5cfa7030c7a4")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("36ef0463-7435-4d8c-abc8-65a15824ed4e"),
                            Id = new Guid("1beafe73-0317-44d1-b8c0-12e2e7a85236")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("7925dde1-b983-46c3-a9fa-59d08d497c3f"),
                            Id = new Guid("c65a5602-5d5e-4ae7-947a-1372a5b27dd2")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("ce641717-7ab9-46b4-8188-2ec28d1985a4"),
                            Id = new Guid("b5ba8a36-6c3c-4ee2-bb4d-a938dd546395")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("19208f3f-0c95-416f-a095-99650fb94490"),
                            Id = new Guid("bfd1ddc4-d92e-40d5-be7c-52863a4529d1")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("06e6bc20-7534-4e47-b914-8a0dd0867a24"),
                            Id = new Guid("06346a5f-2681-4177-8ed1-5fc487007911")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("3f4a03fe-05ac-49e3-ac32-692ed12d1510"),
                            Id = new Guid("810fd972-1080-4943-9383-60f0961fea4c")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("1e9c547e-f245-46e4-b4c6-779ce7a3774e"),
                            Id = new Guid("72af926f-b0a5-421b-85ff-293fdca1cc4e")
                        },
                        new
                        {
                            UserId = new Guid("a3edc636-8153-42af-85a1-65dac56cded7"),
                            PrivilegeId = new Guid("391a2af6-a576-43fd-9d3d-90baf5c52594"),
                            Id = new Guid("e23e2a09-31be-4516-b570-c0e17290ace4")
                        });
                });

            modelBuilder.Entity("DotNetStarter.Entities.AuthToken", b =>
                {
                    b.HasOne("DotNetStarter.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetStarter.Entities.Otp", b =>
                {
                    b.HasOne("DotNetStarter.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetStarter.Entities.RolePrivilege", b =>
                {
                    b.HasOne("DotNetStarter.Entities.Privilege", "Privilege")
                        .WithMany()
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetStarter.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DotNetStarter.Entities.User", b =>
                {
                    b.HasOne("DotNetStarter.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DotNetStarter.Entities.UserPrivilege", b =>
                {
                    b.HasOne("DotNetStarter.Entities.Privilege", "Privilege")
                        .WithMany()
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetStarter.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
